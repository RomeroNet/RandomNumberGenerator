name: Run tests

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: read

jobs:
  prepare-sdk:
    name: Download Android SDK
    runs-on: ubuntu-latest

    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: SDK cache
        id: cache-sdk
        uses: actions/cache@v4
        with:
          path: ~/android_sdk
          key: android-sdk
          lookup-only: true

      - name: Download Android SDK
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: |
          mkdir ~/android_sdk
          cd ~/android_sdk
          curl https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o sdk.zip
          unzip sdk.zip
          cd cmdline-tools
          mkdir latest
          mv lib bin NOTICE.txt source.properties latest

      - name: Accept licenses
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: yes | ~/android_sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install required packages
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: |
          ~/android_sdk/cmdline-tools/latest/bin/sdkmanager \
          "build-tools;35.0.0-rc1" \
          "platforms;android-34" \
          "sources;android-34" \
          "platform-tools" \
          "emulator" \
          "system-images;android-34;google_apis_playstore;x86_64"

  test:
    name: Run build & test
    runs-on: ubuntu-latest
    needs: prepare-sdk

    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: SDK cache
        uses: actions/cache@v4
        with:
          path: ~/android_sdk
          key: android-sdk

      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: gradle

      - name: Gradle build cache
        uses: actions/cache@v4
        with:
          path: .gradle
          key: gradle-build

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build app & run unit tests with coverage
        run: |
          export ANDROID_HOME=~/android_sdk
          export ANDROID_SDK_ROOT=~/android_sdk
          ./gradlew koverXmlReportDebug

      - name: Prepare emulator dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create & start emulator
        run: |
          export ANDROID_HOME=~/android_sdk
          export ANDROID_SDK_ROOT=~/android_sdk
          export ANDROID_AVD_HOME=~/.android/avd
          mkdir -p ~/.android/avd
          echo "no" | ~/android_sdk/cmdline-tools/latest/bin/avdmanager create avd --force -n "test" -k "system-images;android-34;google_apis_playstore;x86_64"
          ~/android_sdk/emulator/emulator -avd test -no-window &

      - name: Run instrumentation tests with coverage
        run: |
          export ANDROID_HOME=~/android_sdk
          export ANDROID_SDK_ROOT=~/android_sdk
          ~/android_sdk/platform-tools/adb wait-for-device
          ./gradlew createDebugAndroidTestCoverageReport

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./app/build/reports/coverage/androidTest/debug/connected/report.xml,./app/build/reports/kover/reportDebug.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
